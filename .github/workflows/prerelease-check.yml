name: Pre-release check

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version tag to release, (e.g. v1.2.3)"
        required: true
        type: string
      commit:
        description: "The commit hash to release"
        required: true
        type: string

# Restrict jobs in this workflow to have no permissions by default; permissions
# should be granted per job as needed using a dedicated `permissions` block
permissions: {}

jobs:
  osv-scan:
    permissions:
      contents: read # to fetch code (actions/checkout)
      security-events: write # for uploading SARIF files
      actions: read
    uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@main
    with:
      # Only scan the top level go.mod file without recursively scanning directories since
      # this is pipeline is about releasing the go module and binary
      scan-args: |-
        ./

  links:
    permissions:
      contents: read # to fetch code (actions/checkout)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: tcort/github-action-markdown-link-check@f3d33029dca1c4a24b87e2df648f9f4604ef6533 # v1.1.1
        with:
          use-quiet-mode: "yes"
          base-branch: "main"
  format:
    permissions:
      contents: read # to fetch code (actions/checkout)
    name: prettier
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Run lint action
        uses: ./.github/workflows/format-action
  tidy:
    permissions:
      contents: read # to fetch code (actions/checkout)
    name: go mod tidy
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: stable
          check-latest: true
      - run: go mod tidy -diff
  lint:
    permissions:
      contents: read # to fetch code (actions/checkout)
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          ref: ${{ inputs.commit }}
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: stable
          check-latest: true
      - name: Run lint action
        uses: ./.github/workflows/lint-action
  prepare_test_image_testdata:
    permissions:
      contents: read # to fetch code (actions/checkout)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - run: scripts/build_test_images.sh
      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: image-testdata-${{ github.run_number }}-${{ github.run_attempt }}
          path: cmd/osv-scanner/scan/image/testdata/*.tar
          retention-days: 1
  tests:
    permissions:
      contents: read # to fetch code (actions/checkout)
    name: Run unit tests
    needs:
      - prepare_test_image_testdata
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          ref: ${{ inputs.commit }}
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: image-testdata-${{ github.run_number }}-${{ github.run_attempt }}
          path: cmd/osv-scanner/scan/image/testdata/
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: stable
          check-latest: true
      - name: Run test action
        uses: ./.github/workflows/test-action
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
  generators:
    permissions:
      contents: read # to fetch code (actions/checkout)
    name: (re)generate code
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          ref: ${{ inputs.commit }}
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: stable
          check-latest: true
      - name: Run generators
        run: go generate ./...
      - run: |
          git diff --name-only \
            | xargs -I '{}' bash -c \
              'echo "::error file={}::This needs to be regenerated by running \`go generate ./...\`" && false'
  release-helper:
    permissions:
      contents: read # to fetch code (actions/checkout)
    runs-on: ubuntu-latest
    needs:
      - format
      - lint
      - tests
      - osv-scan
    steps:
      - name: Print Scripts
        env:
          OUTPUT: |
            git fetch upstream &&
            git tag ${{ inputs.version }} ${{ inputs.commit }} &&
            git push upstream ${{ inputs.version }}
        shell: bash
        run: |
          echo $OUTPUT
